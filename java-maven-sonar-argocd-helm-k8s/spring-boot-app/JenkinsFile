pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket to access host Docker daemon
        }
    }

    environment {
        SONAR_URL = "http://3.80.168.81:9000/"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "krishnap2312"
        GIT_REPO_URL = "https://github.com/krishnap2312/Jenkins-Zero-To-Hero.git"
        GIT_BRANCH = "main"
        AWS_ACCOUNT_ID = '767828727718' // Replace with your AWS Account ID
        AWS_REGION = 'us-east-1' // AWS Region
        CODEARTIFACT_DOMAIN = 'ultimate-cicd' // Your CodeArtifact domain
        CODEARTIFACT_REPO = 'my-repository' // Your CodeArtifact repository
        ARTIFACT_VERSION = "1.0.${BUILD_NUMBER}" // Versioning based on build number
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${GIT_BRANCH}", url: "${GIT_REPO_URL}"
            }
        }

        stage('Build and Test') {
            steps {
                // Build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'SonarQubeToken', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }

        stage('Authenticate Maven with AWS CodeArtifact') {
            steps {
                // Use the correct AWS credentials block for AWS-specific credentials
                withAWSCredentials(credentialsId: 'aws-credentials') {
                    sh '''
                        aws --version  # Check if AWS CLI is available
                        aws codeartifact login --tool maven --domain ${CODEARTIFACT_DOMAIN} --repository ${CODEARTIFACT_REPO} --region ${AWS_REGION}
                    '''
                }
            }
        }

        stage('Publish Artifact to CodeArtifact') {
            steps {
                script {
                    // Debugging step to ensure the artifact file exists
                    sh 'ls -l java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/'

                    // Deploy the artifact to CodeArtifact
                    sh '''
                        mvn deploy:deploy-file -X \
                          -DgroupId=com.example \
                          -DartifactId=my-artifact \
                          -Dversion=${ARTIFACT_VERSION} \
                          -Dpackaging=jar \
                          -Dfile=java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/my-artifact-${ARTIFACT_VERSION}.jar \
                          -DrepositoryId=aws-codeartifact \
                          -Durl=https://aws-codeartifact.${AWS_REGION}.amazonaws.com/maven/${CODEARTIFACT_DOMAIN}/${CODEARTIFACT_REPO}/
                    '''
                }
            }
        }
    }
}
